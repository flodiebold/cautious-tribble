language: rust
sudo: required
branches:
  only:
    # This is where pull requests from "bors r+" are built.
    - staging
    # This is where pull requests from "bors try" are built.
    - trying
    # Uncomment this to enable building pull requests.
    - master
matrix:
  include:
    # warnings check
  - name: "Warnings"
    env: RUSTFLAGS="-D warnings"
    rust: beta # until 2018 edition is stable
    script:
      - cargo check --tests
  - name: "Rustfmt"
    # rust: 1.28.0  # `stable`: Locking down for consistent behavior
    rust: nightly-2018-10-30 # temporarily for better formatting
    install:
      - rustup component add rustfmt-preview
    script:
      - cargo fmt --all -- --check
    # clippy, currently disabled
  # - env: CLIPPY
  #   rust: nightly
  #   install:
  #     - rustup component add clippy-preview
  #   script:
  #     - cargo clippy --all-features -- -D clippy
    # nightly, currently disabled
  # - name: "Nightly build & test (no minikube)"
  #   rust: nightly
  #   script:
  #     - export RUST_BACKTRACE=1
  #     - cargo build --all
  #     - cargo test -- --skip minikube
  - name: "Stable build & test including minikube"
    env:
      - CHANGE_MINIKUBE_NONE_USER=true
    rust: beta # until 2018 edition is stable
    install:
      - rustc -Vv
      - cargo -V
    before_script:
      - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.28.1/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - sudo minikube start --vm-driver=none --kubernetes-version=v1.10.0 --bootstrapper=localkube
      - minikube update-context
      - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
    script:
      - export RUST_BACKTRACE=1
      - ./test-integration-existing-minikube.sh
  - name: "Typescript formatting, typecheck & lint"
    language: node_js
    node_js: "node"
    before_script:
      - cd ui
      - yarn
    script:
      - yarn format-check
      - yarn ts-build
      - yarn lint
cache:
  cargo: true
  yarn: true
  directories:
    - ui/node_modules
before_cache:
  # stolen from rust-analyzer, this seems to help caching a lot
  - find ./target/debug -type f -maxdepth 1 -delete
  - rm -fr ./target/debug/{deps,.fingerprint}/{common-*,deployer-*,aggregator-*,transitioner-*,git_fixture-*,integration_test-*}
  - rm -f  ./target/.rustc_info.json
